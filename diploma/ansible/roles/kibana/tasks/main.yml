---
- name: Обновить кеш пакетов
  apt:
    update_cache: yes

- name: Установить необходимые пакеты
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python3-pip
    state: present

- name: Обновить pip до последней версии
  pip:
    name: pip
    state: latest

- name: Скачать containerd.io
  get_url:
    url: https://download.docker.com/linux/ubuntu/dists/bionic/pool/stable/amd64/containerd.io_1.4.3-1_amd64.deb
    dest: /tmp/containerd.io.deb
    mode: '0644'

- name: Скачать docker-ce-cli
  get_url:
    url: https://download.docker.com/linux/ubuntu/dists/bionic/pool/stable/amd64/docker-ce-cli_19.03.15~3-0~ubuntu-bionic_amd64.deb
    dest: /tmp/docker-ce-cli.deb
    mode: '0644'

- name: Скачать docker-ce
  get_url:
    url: https://download.docker.com/linux/ubuntu/dists/bionic/pool/stable/amd64/docker-ce_19.03.15~3-0~ubuntu-bionic_amd64.deb
    dest: /tmp/docker-ce.deb
    mode: '0644'

- name: Установить containerd.io
  apt:
    deb: /tmp/containerd.io.deb
    state: present

- name: Установить docker-ce-cli
  apt:
    deb: /tmp/docker-ce-cli.deb
    state: present

- name: Установить docker-ce
  apt:
    deb: /tmp/docker-ce.deb
    state: present

- name: Установить Docker Compose
  pip:
    name: docker-compose==1.29.2
    state: present

- name: Добавить пользователя в группу docker
  user:
    name: "{{ ansible_user | default('user') }}"
    groups: docker
    append: yes

- name: Запустить и включить Docker
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Wait for Elasticsearch HTTP API
  ansible.legacy.uri:
    url: "http://{{ elastic_int_ip }}:9200"
    method: GET
    timeout: 5
    status_code: [200, 401]
  register: es_https_available
  until: es_https_available.status in [200, 401]
  retries: 20
  delay: 10

- name: Сбросить пароль kibana_system в Elasticsearch (если существует)
  ansible.legacy.shell:
    cmd: >
      curl -u elastic:{{ elastic_password }} -X PUT "http://{{ elastic_int_ip }}:9200/_security/user/kibana_system/_password"
      -H "Content-Type: application/json"
      -d '{"password":"{{ kibana_password }}"}'
  ignore_errors: yes  # Поправка: добавлена задача для сброса пароля, игнорируем, если пользователь не существует

- name: Создать пользователя для Kibana в Elasticsearch (если не существует)
  ansible.legacy.shell:
    cmd: >
      curl -u elastic:{{ elastic_password }} -X POST "http://{{ elastic_int_ip }}:9200/_security/user/kibana_system"
      -H "Content-Type: application/json"
      -d '{"password":"{{ kibana_password }}","roles":["kibana_system"]}'
  register: create_user_result
  changed_when: create_user_result.rc == 0
  failed_when: create_user_result.rc != 0 and "already exists" not in create_user_result.stderr
  # Поправка: убрал ignore_errors: yes, исправил https на http

- name: Создать директорию для Kibana
  file:
    path: /home/{{ ansible_user | default('user') }}/kibana
    state: directory
    owner: "{{ ansible_user | default('user') }}"
    group: "{{ ansible_user | default('user') }}"

- name: Создать файл docker-compose.yml для Kibana
  copy:
    dest: /home/{{ ansible_user | default('user') }}/kibana/docker-compose.yml
    content: |
      version: '3'
      services:
        kibana:
          container_name: kibana
          image: kibana:8.12.0
          environment:
            - ELASTICSEARCH_HOSTS=http://{{ elastic_int_ip }}:9200
            - ELASTICSEARCH_USERNAME={{ kibana_username }}
            - ELASTICSEARCH_PASSWORD={{ kibana_password }}
            - ELASTICSEARCH_SSL_VERIFICATIONMODE=none
            - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY={{ lookup('pipe', 'openssl rand -hex 16') }}  # Поправка: добавлено
            - XPACK_REPORTING_ENCRYPTIONKEY={{ lookup('pipe', 'openssl rand -hex 16') }}  # Поправка: добавлено
          ports:
            - "5601:5601"
          networks:
            - kibana_network
      networks:
        kibana_network:
          driver: bridge
    owner: "{{ ansible_user | default('user') }}"
    group: "{{ ansible_user | default('user') }}"
    mode: '0644'

- name: Запустить docker-compose на хосте Kibana
  community.docker.docker_compose:
    project_src: /home/{{ ansible_user | default('user') }}/kibana
    state: present